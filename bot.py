from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from telegram.error import TelegramError
from apscheduler.schedulers.background import BackgroundScheduler
import asyncio
import logging

# Bot token
TOKEN = "7929440474:AAEPEIl6MZNpX5J0qhQ86-Pjberu-ZuXfxA"

# Telegram ID
USER_ID = 6131621482 

def check_bot_status():
    try:
        # Botun Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ± bildiren basit bir mesaj gÃ¶nder
        bot.send_message(chat_id=CHAT_ID, text="âœ… Bot Ã§alÄ±ÅŸÄ±yor! (Saatlik kontrol)")
        logging.info("Kontrol mesajÄ± baÅŸarÄ±yla gÃ¶nderildi.")
    except TelegramError as e:
        logging.error(f"Kontrol mesajÄ± gÃ¶nderilemedi: {e}")

# Arka plan zamanlayÄ±cÄ±sÄ±nÄ± oluÅŸtur ve kontrol iÅŸini ekle
scheduler = BackgroundScheduler()
scheduler.add_job(check_bot_status, 'interval', hours=1)  # SAATTE 1 KEZ Ã§alÄ±ÅŸÄ±r
scheduler.start()

async def start(update: Update, context: CallbackContext) -> None:
    """KullanÄ±cÄ± /start komutunu gÃ¶nderdiÄŸinde Ã§alÄ±ÅŸacak."""
    await update.message.reply_text("Merhaba! Ben senin Telegram botunum. Her gÃ¼n tansiyonunu Ã¶lÃ§meni hatÄ±rlatacaÄŸÄ±m.")

async def echo(update: Update, context: CallbackContext) -> None:
    """KullanÄ±cÄ±nÄ±n gÃ¶nderdiÄŸi mesajÄ± aynen geri yollar."""
    await update.message.reply_text(update.message.text)

async def remind():
    """KullanÄ±cÄ±ya her gÃ¼n tansiyon Ã¶lÃ§Ã¼mÃ¼nÃ¼ hatÄ±rlatan mesajÄ± yollar."""
    app = Application.builder().token(TOKEN).build()
    async with app:
        await app.bot.send_message(chat_id=USER_ID, text="GÃ¼naydÄ±n! Tansiyonunu Ã¶lÃ§meyi unutma. ğŸ©ºğŸ“Š")

def schedule_reminder():
    """HatÄ±rlatÄ±cÄ±yÄ± her gÃ¼n belirli bir saatte Ã§alÄ±ÅŸacak ÅŸekilde ayarla."""
    scheduler = BackgroundScheduler()
    scheduler.add_job(lambda: asyncio.run(remind()), 'cron', hour=0, minute=0)  # Sabah 09:00'da Ã§alÄ±ÅŸÄ±r
    scheduler.start()

def main():
    """Botu Ã§alÄ±ÅŸtÄ±ran ana fonksiyon."""
    app = Application.builder().token(TOKEN).build()

    # KomutlarÄ± ekleyelim deneme yorumu
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    # HatÄ±rlatÄ±cÄ±yÄ± baÅŸlat
    schedule_reminder()

    # Botu Ã§alÄ±ÅŸtÄ±r
    print("Bot Ã§alÄ±ÅŸÄ±yor ve hatÄ±rlatÄ±cÄ± ayarlandÄ±...")
    app.run_polling()

if __name__ == "__main__":
    try:
        main()
    except (KeyboardInterrupt, SystemExit):
        scheduler.shutdown()
        print("Bot kapatÄ±ldÄ±.")
